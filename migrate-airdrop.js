import { ethers } from "ethers"

const MIGRATOR_ABI = [{ "type": "constructor", "inputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "AIRDROP_TYPEHASH", "inputs": [], "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }], "stateMutability": "view" }, { "type": "function", "name": "LP", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "contract IERC20" }], "stateMutability": "view" }, { "type": "function", "name": "ROUTER", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "contract IRouter" }], "stateMutability": "view" }, { "type": "function", "name": "SUPERTUT", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "contract ISupertutellian" }], "stateMutability": "view" }, { "type": "function", "name": "TUT", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "contract IERC20" }], "stateMutability": "view" }, { "type": "function", "name": "UPGRADE_INTERFACE_VERSION", "inputs": [], "outputs": [{ "name": "", "type": "string", "internalType": "string" }], "stateMutability": "view" }, { "type": "function", "name": "WBTC", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "contract IERC20" }], "stateMutability": "view" }, { "type": "function", "name": "acceptOwnership", "inputs": [], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "airdropClaimed", "inputs": [{ "name": "account", "type": "address", "internalType": "address" }], "outputs": [{ "name": "claimed", "type": "bool", "internalType": "bool" }], "stateMutability": "view" }, { "type": "function", "name": "eip712Domain", "inputs": [], "outputs": [{ "name": "fields", "type": "bytes1", "internalType": "bytes1" }, { "name": "name", "type": "string", "internalType": "string" }, { "name": "version", "type": "string", "internalType": "string" }, { "name": "chainId", "type": "uint256", "internalType": "uint256" }, { "name": "verifyingContract", "type": "address", "internalType": "address" }, { "name": "salt", "type": "bytes32", "internalType": "bytes32" }, { "name": "extensions", "type": "uint256[]", "internalType": "uint256[]" }], "stateMutability": "view" }, { "type": "function", "name": "gt3", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "contract IERC20" }], "stateMutability": "view" }, { "type": "function", "name": "implementation", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "address" }], "stateMutability": "view" }, { "type": "function", "name": "initialize", "inputs": [{ "name": "owner_", "type": "address", "internalType": "address" }, { "name": "gt3_", "type": "address", "internalType": "address" }, { "name": "xGt3_", "type": "address", "internalType": "address" }, { "name": "signer_", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "migrate", "inputs": [{ "name": "amountMinTUT", "type": "uint256", "internalType": "uint256" }, { "name": "amountMinWBTC", "type": "uint256", "internalType": "uint256" }, { "name": "airdropAmount", "type": "uint256", "internalType": "uint256" }, { "name": "signature", "type": "bytes", "internalType": "bytes" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "owner", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "address" }], "stateMutability": "view" }, { "type": "function", "name": "pause", "inputs": [], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "paused", "inputs": [], "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }], "stateMutability": "view" }, { "type": "function", "name": "pendingOwner", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "address" }], "stateMutability": "view" }, { "type": "function", "name": "proxiableUUID", "inputs": [], "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }], "stateMutability": "view" }, { "type": "function", "name": "renounceOwnership", "inputs": [], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "signer", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "address" }], "stateMutability": "view" }, { "type": "function", "name": "transferOwnership", "inputs": [{ "name": "newOwner", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "unpause", "inputs": [], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "upgradeToAndCall", "inputs": [{ "name": "newImplementation", "type": "address", "internalType": "address" }, { "name": "data", "type": "bytes", "internalType": "bytes" }], "outputs": [], "stateMutability": "payable" }, { "type": "function", "name": "xGt3", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "contract IxGT3" }], "stateMutability": "view" }, { "type": "event", "name": "EIP712DomainChanged", "inputs": [], "anonymous": false }, { "type": "event", "name": "Initialized", "inputs": [{ "name": "version", "type": "uint64", "indexed": false, "internalType": "uint64" }], "anonymous": false }, { "type": "event", "name": "Migrate", "inputs": [{ "name": "account", "type": "address", "indexed": true, "internalType": "address" }, { "name": "amountTUT", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "amountLP", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "liqWBTC", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "liqTUT", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "airdrop", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "OwnershipTransferStarted", "inputs": [{ "name": "previousOwner", "type": "address", "indexed": true, "internalType": "address" }, { "name": "newOwner", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "OwnershipTransferred", "inputs": [{ "name": "previousOwner", "type": "address", "indexed": true, "internalType": "address" }, { "name": "newOwner", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "Paused", "inputs": [{ "name": "account", "type": "address", "indexed": false, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "Supertut", "inputs": [{ "name": "account", "type": "address", "indexed": true, "internalType": "address" }, { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "Unpaused", "inputs": [{ "name": "account", "type": "address", "indexed": false, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "Upgraded", "inputs": [{ "name": "implementation", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "Xgt3", "inputs": [{ "name": "account", "type": "address", "indexed": true, "internalType": "address" }, { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "error", "name": "AddressEmptyCode", "inputs": [{ "name": "target", "type": "address", "internalType": "address" }] }, { "type": "error", "name": "AddressInsufficientBalance", "inputs": [{ "name": "account", "type": "address", "internalType": "address" }] }, { "type": "error", "name": "ERC1967InvalidImplementation", "inputs": [{ "name": "implementation", "type": "address", "internalType": "address" }] }, { "type": "error", "name": "ERC1967NonPayable", "inputs": [] }, { "type": "error", "name": "EnforcedPause", "inputs": [] }, { "type": "error", "name": "ExpectedPause", "inputs": [] }, { "type": "error", "name": "FailedInnerCall", "inputs": [] }, { "type": "error", "name": "InvalidInitialization", "inputs": [] }, { "type": "error", "name": "InvalidSignature", "inputs": [] }, { "type": "error", "name": "NotInitializing", "inputs": [] }, { "type": "error", "name": "OwnableInvalidOwner", "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }] }, { "type": "error", "name": "OwnableUnauthorizedAccount", "inputs": [{ "name": "account", "type": "address", "internalType": "address" }] }, { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] }, { "type": "error", "name": "SafeERC20FailedOperation", "inputs": [{ "name": "token", "type": "address", "internalType": "address" }] }, { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] }, { "type": "error", "name": "UUPSUnsupportedProxiableUUID", "inputs": [{ "name": "slot", "type": "bytes32", "internalType": "bytes32" }] }]

const USER_KEY = process.env.PRIVATE_KEY
const BACKEND_KEY = process.env.SIGNER_PRIVATE_KEY
const MIGRATOR_ADDRESS = process.env.MIGRATOR_ADDRESS
const MY_RPC = process.env.RPC

const AIRDROP_AMOUNT = ethers.utils.parseEther("10")

const types = {
    Airdrop: [
        { name: "account", type: "address" },
        { name: "amount", type: "uint256" }
    ]
}

const domain = {
    name: "TUT_GT3_MIGRATOR",
    version: "1",
    chainId: 137,
    verifyingContract: MIGRATOR_ADDRESS
}

async function main() {
    const provider = new ethers.providers.JsonRpcProvider(MY_RPC)
    const user = new ethers.Wallet(USER_KEY, provider)
    const backend = new ethers.Wallet(BACKEND_KEY)

    const value = {
        account: user.address,
        amount: AIRDROP_AMOUNT
    }

    const signature = await backend._signTypedData(domain, types, value)

    const migratorContract = new ethers.Contract(MIGRATOR_ADDRESS, MIGRATOR_ABI, user)
    const receipt = await migratorContract.functions.migrate(0, 0, AIRDROP_AMOUNT, signature)
    console.log(receipt.hash)
    await receipt.wait()
    console.log("Validated")
}

main()